name: Build, Test, and Deploy to Prod

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  # Docker username from secrets
      DOCKER_IMAGE: language_learner_arm  # Name for the image

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build ARM binary with cross
      run: |
        cd api
        cross build --release --target armv7-unknown-linux-musleabihf

    - name: Rename binary
      run: |
        mkdir -p out
        cp api/target/armv7-unknown-linux-musleabihf/release/api out/api

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE:arm -f Dockerfile ./out
        docker push $DOCKER_USERNAME/$DOCKER_IMAGE:arm
      working-directory: ./out
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy deployment files to droplet
      run: |
        sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~
        sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no Dockerfile root@${{ vars.DROPLET_IP }}:~
        sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no api/ root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          export NEO4J_URI=${{ secrets.NEO4J_URI }}
          export NEO4J_USER=${{ secrets.NEO4J_USER }}
          export NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}
          export NEO4J_DB=${{ secrets.NEO4J_DB }}       
          docker-compose down
          docker-compose pull
          docker-compose up -d
